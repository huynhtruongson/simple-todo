// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	pgx "github.com/jackc/pgx/v5"
)

// TxStarter is an autogenerated mock type for the TxStarter type
type TxStarter struct {
	mock.Mock
}

type TxStarter_Expecter struct {
	mock *mock.Mock
}

func (_m *TxStarter) EXPECT() *TxStarter_Expecter {
	return &TxStarter_Expecter{mock: &_m.Mock}
}

// BeginTx provides a mock function with given fields: ctx, options
func (_m *TxStarter) BeginTx(ctx context.Context, options pgx.TxOptions) (pgx.Tx, error) {
	ret := _m.Called(ctx, options)

	var r0 pgx.Tx
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, pgx.TxOptions) (pgx.Tx, error)); ok {
		return rf(ctx, options)
	}
	if rf, ok := ret.Get(0).(func(context.Context, pgx.TxOptions) pgx.Tx); ok {
		r0 = rf(ctx, options)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pgx.Tx)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, pgx.TxOptions) error); ok {
		r1 = rf(ctx, options)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TxStarter_BeginTx_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BeginTx'
type TxStarter_BeginTx_Call struct {
	*mock.Call
}

// BeginTx is a helper method to define mock.On call
//   - ctx context.Context
//   - options pgx.TxOptions
func (_e *TxStarter_Expecter) BeginTx(ctx interface{}, options interface{}) *TxStarter_BeginTx_Call {
	return &TxStarter_BeginTx_Call{Call: _e.mock.On("BeginTx", ctx, options)}
}

func (_c *TxStarter_BeginTx_Call) Run(run func(ctx context.Context, options pgx.TxOptions)) *TxStarter_BeginTx_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(pgx.TxOptions))
	})
	return _c
}

func (_c *TxStarter_BeginTx_Call) Return(_a0 pgx.Tx, _a1 error) *TxStarter_BeginTx_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *TxStarter_BeginTx_Call) RunAndReturn(run func(context.Context, pgx.TxOptions) (pgx.Tx, error)) *TxStarter_BeginTx_Call {
	_c.Call.Return(run)
	return _c
}

// NewTxStarter creates a new instance of TxStarter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTxStarter(t interface {
	mock.TestingT
	Cleanup(func())
}) *TxStarter {
	mock := &TxStarter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
